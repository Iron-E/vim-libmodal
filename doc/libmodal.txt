*libmodal.txt*          Plugin for managing tabs
*libmodal*

Forked From: vim-win – https://github.com/dstein64/vim-win
Original Author: Daniel Steinberg – https://www.dannyadam.com

Author: Iron-E – https://github.com/Iron-E & https://gitlab.com/Iron_E
Web: https://github.com/Iron-E/vim-libmodal

1. Requirements                            |libmodal-requirements|
2. Installation                            |libmodal-installation|
3. Usage                                   |libmodal-usage|
4. Configuration                           |libmodal-configuration|

|libmodal| is a Neo/vim library/plugin aimed at simplifying the creation
of new "modes" (e.g. Insert, Normal). The entrance of modes is
user-defined, and their exit is set to `<Esc>`. The function and name of
modes is also user-defined, and is outlined in |libmodal-usage|.

============================================================================
1. Requirements                            *libmodal-requirements*

* `vim>=8.2` or `nvim>=0.4.0`

============================================================================
2. Installation                            *libmodal-installation*

Use |packages| or one of the various package managers.

Package Managers ~
                                           *libmodal-installation-package-managers*

Manager    Command
-------    -------
dein.vim   `call dein#add('https://github.com/Iron_E/vim-libmodal')`
NeoBundle  `NeoBundle 'https://github.com/Iron_E/vim-libmodal'`
Vim-Plug   `Plug 'https://github.com/Iron_E/vim-libmodal'`
Vundle     `Plugin 'https://github.com/Iron_E/vim-libmodal'`

============================================================================
3. Usage                                   *libmodal-usage*
                                                               *libmodal#Enter*

|libmodal#Enter| takes two arguments: `modeName` and `modeFunc`.

Arg        Use
---        ---
`modeName` The name for the mode when prompting the user.
`modeFunc` The function used to control the mode. Takes one char param.

Creating Modes ~
                                           *libmodal-usage-creating-modes*

To define a new mode, you must first create a function to pass into
|libmodal#Enter|. Example:

>
	function! s:MyNewMode(modeInput)
		if a:modeInput ==# "a"
			execute 'tabnew'
		elsif a:modeInput ==# "d"
			execute 'tabclose'
		endif
	endfunction
<

After defining said function, you can create a mapping to enter the
mode. Be sure to use `<expr>`. Example:

>
	nnoremap <expr> <leader>m libmodal#Enter("MyNewModeName", s:MyNewMode)
<

============================================================================
4. Configuration                           *libmodal-configuration*

The following highlight groups can be configured to change |libmodal|'s colors.

Name              Default      Description
----              -------      -----------
`LibmodalPrompt`  `ModeMsg`    Color for the mode text.
`LibmodalStar`    `StatusLine` Color for the `*` at the beginning.

============================================================================
 vim:tw=78:ts=4:ft=help:norl:
